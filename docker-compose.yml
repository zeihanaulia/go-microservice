version: '2.1'

services:
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: exit 0
  users-service-db:
    container_name: users-service-db
    build: ./db
    ports:
      - 5435:5435
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0
  user_service:
    image: user_service
    build: ./user-service
    environment:
      - APP_RD_ADDRESS=redis:6379
      - APP_RD_AUTH=password
      - APP_RD_DBNAME=0
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-service-db:5432/users_prod?sslmode=disable
      - DATABASE_DEV_URL=postgres://postgres:postgres@users-service-db:5432/users_dev?sslmode=disable
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-service-db:5432/users_test?sslmode=disable
    depends_on:
      users-service-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 8030:3000
    links:
      - users-service-db
      - redis
  proxy:
    container_name: userservice_loadbalance
    build: ./nginx
    ports:
      - "80:80"
    links:
      - user_service
      - famous_news_service
      - politics_news_service
      - sports_news_service
  famous_news_service:
    image: famous_new_service
    build: ./famous-news-service
    volumes:
      - '.:/usr/srv/app'
    environment:
      - QUERYDB_HOST=mongodb://querydb_famous:27017/
      - QUEUE_HOST=amqp://guest@rabitmq
      - COMMANDDB_HOST=postgresql://postgres:postgres@commanddb_famous:5432/news_prod?sslmode=disabled
      - COMMANDDB_DEV_HOST=postgresql://postgres:postgres@commanddb_famous:5431/news_dev?sslmode=disabled
      - COMMANDDB_TES_HOST=postgresql://postgres:postgres@commanddb_famous:5431/test_dev?sslmode=disabled      
    depends_on:
      - querydb_famous
      - commanddb_famous
      - rabbitmq
    links:
      - querydb_famous
      - commanddb_famous
      - rabbitmq
  querydb_famous:
    image: querydb_famous
    build: ./famous-news-service/query_db
    port:
      - "5433:5433"
    restart: always
  commanddb_famous:
    image: commanddb_famous
    build: ./famous-news-service/command_db
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: exit 0
  politics_news_service:
    image: politics_new_service
    build: ./politics-news-service
    volumes:
      - '.:/usr/srv/app'
    environment:
      - QUERYDB_HOST=mongodb://querydb_famous:27017/
      - QUEUE_HOST=amqp://guest@rabitmq
      - COMMANDDB_HOST=postgresql://postgres:postgres@commanddb_politics:5432/news_prod?sslmode=disabled
      - COMMANDDB_DEV_HOST=postgresql://postgres:postgres@commanddb_politics:5431/news_dev?sslmode=disabled
      - COMMANDDB_TES_HOST=postgresql://postgres:postgres@commanddb_politics:5431/test_dev?sslmode=disabled      
    depends_on:
      - querydb_politics
      - commanddb_politics
      - rabbitmq
    links:
      - querydb_politics
      - commanddb_politics
      - rabbitmq
  querydb_politics:
    image: querydb_politics
    build: ./politics-news-service/query_db
    port:
      - "5433:5433"
    restart: always
  commanddb_politics:
    image: commanddb_politics
    build: ./polictics-news-service/command_db
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: exit 0
  sports_news_service:
    image: sports_new_service
    build: ./sports-news-service
    volumes:
      - '.:/usr/srv/app'
    environment:
      - QUERYDB_HOST=mongodb://querydb_famous:27017/
      - QUEUE_HOST=amqp://guest@rabitmq
      - COMMANDDB_HOST=postgresql://postgres:postgres@commanddb_sports:5432/news_prod?sslmode=disabled
      - COMMANDDB_DEV_HOST=postgresql://postgres:postgres@commanddb_sports:5431/news_dev?sslmode=disabled
      - COMMANDDB_TES_HOST=postgresql://postgres:postgres@commanddb_sports:5431/test_dev?sslmode=disabled      
    depends_on:
      - querydb_sports
      - commanddb_sports
      - rabbitmq
    links:
      - querydb_sports
      - commanddb_sports
      - rabbitmq
  querydb_sports:
    image: querydb_sports
    build: ./sports-news-service/query_db
    port:
      - "5433:5433"
    restart: always
  commanddb_sports:
    image: commanddb_sports
    build: ./sports-news-service/command_db
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: exit 0
  rabbitmq:
    image: rabitmqq
    build: ./queue
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
  orchestrator_news_service:
    image: orchestrator_news_service
    build: ./news-orchestrator
    volumes:
      - './news-orchestrator:/app'
    environment:
      - APP_SETTINGS=config.DevelopmentConfig
      - QUEUE_HOST=amqp://guest@rabbitmq
    depends_on:
      - famous_news_service
      - politics_news_service
      - sports_news_service
      - rabbitmq
    links:
      - famous_news_service
      - politics_news_service
      - sports_news_service
      - rabbitmq